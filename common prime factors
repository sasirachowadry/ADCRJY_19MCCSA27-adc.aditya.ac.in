# ADCRJY_19MCCSA27-adc.aditya.ac.in
class sasi {
static final int MAXN = 100001;
static boolean prime[] = new boolean[MAXN];
static void SieveOfEratosthenes()
{
		for(int i = 0;i<prime.length;i++)
			prime[i]=true;
	prime[0] = false;
	prime[1] = false;
	for (int p = 2; p * p < MAXN; p++) {
		if (prime[p] == true) {
			for (int i = p * p; i < MAXN; i += p)
				prime[i] = false;
		}
	}
}
static void common_prime(int a, int b)
{
	int gcd = (int) __gcd(a, b);
	for (int i = 2; i <= (gcd); i++) {
		if (prime[i] && gcd % i == 0) {
			System.out.print(i + " ");
		}
	}
}
static long __gcd(long a, long b)
{
	if (a == 0)
		return b;
	return __gcd(b % a, a);
}
	public static void main(String[] args) {
	SieveOfEratosthenes();
	int a = 6, b = 12;
	common_prime(a, b);
	}
}
..............................................
 Output
2 3 
